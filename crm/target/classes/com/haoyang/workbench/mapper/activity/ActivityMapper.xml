<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haoyang.workbench.mapper.activity.ActivityMapper">
  <resultMap id="BaseResultMap" type="com.haoyang.workbench.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="owner" jdbcType="CHAR" property="owner" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="start_date" jdbcType="CHAR" property="startDate" />
    <result column="end_date" jdbcType="CHAR" property="endDate" />
    <result column="cost" jdbcType="VARCHAR" property="cost" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="CHAR" property="createTime" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="edit_time" jdbcType="CHAR" property="editTime" />
    <result column="edit_by" jdbcType="VARCHAR" property="editBy" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    id, owner, name, start_date, end_date, cost, description, create_time, create_by, 
    edit_time, edit_by
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    select 
    <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    delete from tbl_activity
    where id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.haoyang.workbench.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    insert into tbl_activity (id, owner, name, start_date, 
      end_date, cost, description, 
      create_time, create_by, edit_time, 
      edit_by)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR}, 
      #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR}, #{editTime,jdbcType=CHAR}, 
      #{editBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.haoyang.workbench.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    insert into tbl_activity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="owner != null">
        owner,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="editTime != null">
        edit_time,
      </if>
      <if test="editBy != null">
        edit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        #{editBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.haoyang.workbench.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    update tbl_activity
    <set>
      <if test="owner != null">
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null">
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null">
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haoyang.workbench.pojo.Activity">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Aug 02 16:26:25 CST 2022.
    -->
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
    name = #{name,jdbcType=VARCHAR},
    start_date = #{startDate,jdbcType=CHAR},
    end_date = #{endDate,jdbcType=CHAR},
    cost = #{cost,jdbcType=VARCHAR},
    description = #{description,jdbcType=VARCHAR},
    create_time = #{createTime,jdbcType=CHAR},
    create_by = #{createBy,jdbcType=VARCHAR},
    edit_time = #{editTime,jdbcType=CHAR},
    edit_by = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

  <insert id="insertActivity" parameterType="com.haoyang.workbench.pojo.Activity">
    insert into tbl_activity (id, owner, name, start_date,
                              end_date, cost, description,
                              create_time, create_by)
    VALUES(
        #{id,jdbcType=VARCHAR},
        #{owner,jdbcType=CHAR},
        #{name,jdbcType=VARCHAR},
        #{startDate,jdbcType=CHAR},
        #{endDate,jdbcType=CHAR},
        #{cost,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR},
        #{createTime,jdbcType=CHAR},
        #{createBy,jdbcType=VARCHAR})
  </insert>

  <select id="selectActivityByConditionForPage" resultMap="BaseResultMap" parameterType="map">
    select ta.id,tu1.name as owner,ta.name,ta.start_date,ta.end_date,ta.cost,
    ta.description,ta.create_time,tu2.name as create_by,ta.edit_time,tu3.edit_by as edit_by
    from tbl_activity ta
    join tbl_user tu1 on tu1.id = ta.owner
    join tbl_user tu2 on tu2.id = ta.create_by
    left join tbl_user tu3 on tu3.id = ta.edit_by
    <where>
      <if test="name != null and name != '' ">
        and ta.name like '%' #{name} '%'
      </if>
      <if test="owner != null and owner != '' ">
        and tu1.name like '%' #{owner} '%'
      </if>
      <if test="startDate != null and startDate != '' ">
        and ta.start_date &gt;= #{startDate}
      </if>
      <if test="endDate != null and endDate != '' ">
        and  ta.end_date &lt;= #{endDate}
      </if>
    </where>
    order by ta.create_time desc
    limit #{beginNo} , #{pageSize}
  </select>

  <select id="selectCountOfActivityByCondition" resultType="int" parameterType="map">
    select count(*)
    from tbl_activity ta
    join tbl_user tu1 on tu1.id = ta.owner
    join tbl_user tu2 on tu2.id = ta.create_by
    left join tbl_user tu3 on tu3.id = ta.edit_by
    <where>
      <if test="name != null and name != '' ">
        and ta.name like '%' #{name} '%'
      </if>
      <if test="owner != null and owner != '' ">
        and tu1.name like '%' #{owner} '%'
      </if>
      <if test="startDate != null and startDate != '' ">
        and ta.start_date &gt;= #{startDate}
      </if>
      <if test="endDate != null and endDate != '' ">
        and  ta.end_date &lt;= #{endDate}
      </if>
    </where>
  </select>

<!--  查询id，根据输入id数值查询-->
  <delete id="deleteActivityByIds" parameterType="String">
    delete from tbl_activity
    where id in
      <foreach collection="array" item="id" separator="," open="(" close=")">
        #{id, jdbcType=VARCHAR}
      </foreach>
  </delete>

<!--  通过查询id，查询返回Activity对象-->
  <select id="selectActivityById" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from tbl_activity
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <update id="updateActivity" parameterType="com.haoyang.workbench.pojo.Activity">
    update tbl_activity
      set owner=#{owner},name=#{name},start_date=#{startDate},end_date=#{endDate},
        cost=#{cost},description=#{description},edit_time=#{editTime},edit_by=#{editBy}
    where id = #{id}
  </update>

  <select id="selectAllActivity" resultMap="BaseResultMap">
    select ta.id,tu1.name as owner,ta.name,ta.start_date,ta.end_date,ta.cost,
    ta.description,ta.create_time,tu2.name as create_by,ta.edit_time,tu3.edit_by as edit_by
    from tbl_activity ta
    join tbl_user tu1 on tu1.id = ta.owner
    join tbl_user tu2 on tu2.id = ta.create_by
    left join tbl_user tu3 on tu3.id = ta.edit_by
    order by ta.create_time desc
  </select>

<!--  通过查询id，判断id在选择所有id集合内-->
  <select id="selectCheckedActivity" resultMap="BaseResultMap">
    select ta.id,tu1.name as owner,ta.name,ta.start_date,ta.end_date,ta.cost,
           ta.description,ta.create_time,tu2.name as create_by,ta.edit_time,tu3.edit_by as edit_by
    from tbl_activity ta
           join tbl_user tu1 on tu1.id = ta.owner
           join tbl_user tu2 on tu2.id = ta.create_by
           left join tbl_user tu3 on tu3.id = ta.edit_by
      where ta.id in
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id, jdbcType=VARCHAR}
        </foreach>
    order by ta.create_time desc
  </select>

  <!--  文件上传遍历循环-->
<!--  <insert id="insertActivityByList" parameterType="com.haoyang.workbench.pojo.Activity">-->
<!--    insert into-->
<!--      tbl_activity(id , owner , name , start_date , end_date , cost , description , create_time , create_by)-->
<!--      values-->
<!--      <foreach collection="array" item="obj" separator=",">-->
<!--        (#{obj.id},#{obj.owner},#{obj.name},#{obj.startDate},#{obj.endDate},#{obj.cose},#{obj.description},#{obj.createTime},#{obj.createBy})-->
<!--      </foreach>-->
<!--  </insert>-->

<!--  根据id查找对应市场活动明细-->
  <select id="selectActivityForDetailById" resultMap="BaseResultMap">
    select ta.id,tu1.name as owner,ta.name,ta.start_date,ta.end_date,ta.cost,
           ta.description,ta.create_time,tu2.name as create_by,ta.edit_time,tu3.edit_by as edit_by
    from tbl_activity ta
           join tbl_user tu1 on tu1.id = ta.owner
           join tbl_user tu2 on tu2.id = ta.create_by
           left join tbl_user tu3 on tu3.id = ta.edit_by
    where ta.id = #{id}
  </select>

<!--  根据clueId查询线索相关联的市场活动信息-->
  <select id="selectActivityForDetailByClueId" resultMap="BaseResultMap" parameterType="string">
    select ta.id,ta.name,ta.start_date,ta.end_date,tu.name as owner
    from tbl_activity ta
           join tbl_user tu on ta.owner=tu.id
           join tbl_clue_activity_relation tcar on tcar.activity_id=ta.id
    where tcar.clue_id=#{clueId}
  </select>

<!--  根据name模糊查询市场活动，并且把已经跟clueId关联过的市场活动排除-->
  <select id="selectActivityForDetailByNameClueId" resultMap="BaseResultMap" parameterType="map">
    select ta.id,ta.name,ta.start_date,ta.end_date,tu.name as owner
    from tbl_activity ta
           join tbl_user tu on ta.owner=tu.id
    where ta.name like '%' #{activityName} '%' and ta.id not in (
      select activity_id
      from tbl_clue_activity_relation
      where clue_id=#{clueId}
    )
  </select>

<!--  根据ids查询市场活动的信息 ,关联成功之后，为了刷新已经关联过的市场活动列表，调用该方法-->
  <select id="selectActivityForDetailByIds" resultMap="BaseResultMap" parameterType="string">
    select ta.id, ta.name, ta.start_date, ta.end_date, tu.name as owner
      from tbl_activity ta
    join tbl_user tu on tu.id = ta.owner
    where ta.id in 
      <foreach collection="array" item="id" separator="," open="(" close=")">
        #{id}
      </foreach>
  </select>

<!--  通过市场活动名和线索id模糊查询市场活动-->
  <select id="selectActivityForConvertByNameAndClueId" resultMap="BaseResultMap">
    select ta.id,ta.name,ta.start_date,ta.end_date,tu.name as owner
    from tbl_activity ta
           join tbl_user tu on ta.owner=tu.id
    where ta.name like '%' #{activityName} '%' and ta.id in (
      select activity_id
      from tbl_clue_activity_relation
      where clue_id=#{clueId}
    )
  </select>

  <select id="selectActivityByFuzzyName" resultMap="BaseResultMap" parameterType="string">
    select ta.id,ta.name,ta.start_date,ta.end_date,tu.name as owner
        from tbl_activity ta
           join tbl_user tu on ta.owner=tu.id
    where ta.name like '%' #{activityName} '%'
    </select>

  <select id="selectCountOfActivityGroupByOwner" resultType="com.haoyang.workbench.pojo.FunnelVO">
    select count(*) as value,u.name as name
    from tbl_activity a
           join tbl_user u on a.owner=u.id
    group by u.name
  </select>
</mapper>