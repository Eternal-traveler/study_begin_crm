package com.haoyang.workbench.mapper.clue;

import com.haoyang.workbench.pojo.Clue;

import java.util.List;
import java.util.Map;

public interface ClueMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Mon Aug 08 15:33:27 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Mon Aug 08 15:33:27 CST 2022
     */
    int insert(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Mon Aug 08 15:33:27 CST 2022
     */
    int insertSelective(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Mon Aug 08 15:33:27 CST 2022
     */
    Clue selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Mon Aug 08 15:33:27 CST 2022
     */
    int updateByPrimaryKeySelective(Clue row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_clue
     *
     * @mbg.generated Mon Aug 08 15:33:27 CST 2022
     */
    int updateByPrimaryKey(Clue row);

    /**
     * 新增线索
     * @param clue 新增的线索
     * @return 新增条数
     */
    int insertClue(Clue clue);

    /**
     * 根据条件分页查询线索
     * @param map 查询条件
     * @return 查询到的线索
     */
    List<Clue> selectClueByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询线索总条数
     * @param map 查询条件
     * @return 线索总条数
     */
    int selectCountOfClueByCondition(Map<String, Object> map);

    /**
     * 根据id批量删除线索参数
     * @param ids id信息
     */
    void deleteClueByIds(String[] ids);


    /**
     * 通过id查询线索
     * @param id 线索id
     * @return 线索活动信息
     */
    Clue selectClueById(String id);

    /**
     * 更新保存对应线索的数据
     * @param clue 更新的线索
     * @return 更新条数
     */
    int updateClue(Clue clue);

    /**
     * 通过id查询线索详情
     * @param id 线索id
     * @return 对应id的线索
     */
    Clue selectClueForDetailById(String id);

    List<String> selectClueStageOfClueGroupByClueStage();

    List<Integer> selectCountOfClueGroupByClueStage();
}